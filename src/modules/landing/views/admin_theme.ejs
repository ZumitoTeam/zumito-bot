<div class="card mt-6">
    <div class="flex items-center justify-between mb-4">
        <div class="text-lg font-semibold">Landing Theme</div>
    </div>
    <form id="themeForm" class="space-y-4">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
                <label class="block mb-1">Primary</label>
                <input type="color" name="primary" value="<%= theme.primary %>" class="w-full h-10 bg-discord-dark-300 rounded" />
            </div>
            <div>
                <label class="block mb-1">Secondary</label>
                <input type="color" name="secondary" value="<%= theme.secondary %>" class="w-full h-10 bg-discord-dark-300 rounded" />
            </div>
            <div>
                <label class="block mb-1">Accent</label>
                <input type="color" name="accent" value="<%= theme.accent %>" class="w-full h-10 bg-discord-dark-300 rounded" />
            </div>
            <div>
                <label class="block mb-1">Gradient From</label>
                <input type="color" name="gradientFrom" value="<%= theme.gradientFrom %>" class="w-full h-10 bg-discord-dark-300 rounded" />
            </div>
            <div>
                <label class="block mb-1">Gradient Via</label>
                <input type="color" name="gradientVia" value="<%= theme.gradientVia %>" class="w-full h-10 bg-discord-dark-300 rounded" />
            </div>
            <div>
                <label class="block mb-1">Gradient To</label>
                <input type="color" name="gradientTo" value="<%= theme.gradientTo %>" class="w-full h-10 bg-discord-dark-300 rounded" />
            </div>
            <div>
                <label class="block mb-1">Text Main</label>
                <input type="color" name="textMain" value="<%= theme.textMain %>" class="w-full h-10 bg-discord-dark-300 rounded" />
            </div>
            <div>
                <label class="block mb-1">Text Secondary</label>
                <input type="color" name="textSecondary" value="<%= theme.textSecondary %>" class="w-full h-10 bg-discord-dark-300 rounded" />
            </div>
            <div>
                <label class="block mb-1">Background</label>
                <input type="color" name="background" value="<%= theme.background %>" class="w-full h-10 bg-discord-dark-300 rounded" />
            </div>
        </div>
        <div class="flex flex-wrap justify-between items-center gap-2">
            <div class="flex items-center gap-2">
                <input type="file" id="importFile" accept=".json" class="hidden" />
                <button type="button" id="importButton" class="btn-secondary">Import</button>
                <button type="button" id="exportButton" class="btn-secondary">Export</button>
            </div>
            <button type="submit" class="btn-primary">Save</button>
        </div>
    </form>
</div>
<script>
    document.getElementById('themeForm').addEventListener('submit', async e => {
        e.preventDefault();
        const formData = new FormData(e.target);
        const data = Object.fromEntries(formData.entries());
        const res = await fetch('/admin/landing/theme', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
        });
        if (res.ok) {
            window.location.reload();
        }
    });
    document.getElementById('importButton').addEventListener('click', () => {
        document.getElementById('importFile').click();
    });
    document.getElementById('importFile').addEventListener('change', async e => {
        const file = e.target.files[0];
        if (!file) return;
        const text = await file.text();
        try {
            const data = JSON.parse(text);
            const res = await fetch('/admin/landing/theme/import', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            });
            if (res.ok) window.location.reload();
        } catch {
            console.error('Invalid theme file');
        }
    });
    document.getElementById('exportButton').addEventListener('click', async () => {
        const res = await fetch('/admin/landing/theme/export');
        if (!res.ok) return;
        const data = await res.json();
        const blob = new Blob([JSON.stringify(data, null, 4)], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'theme.json';
        document.body.appendChild(a);
        a.click();
        a.remove();
        URL.revokeObjectURL(url);
    });
</script>
